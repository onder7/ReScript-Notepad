{
  "version": 3,
  "sources": ["../../rescript/lib/es6/js_json.js"],
  "sourcesContent": ["\n\n\nvar Kind = {};\n\nfunction classify(x) {\n  var ty = typeof x;\n  if (ty === \"string\") {\n    return {\n            TAG: \"JSONString\",\n            _0: x\n          };\n  } else if (ty === \"number\") {\n    return {\n            TAG: \"JSONNumber\",\n            _0: x\n          };\n  } else if (ty === \"boolean\") {\n    if (x === true) {\n      return \"JSONTrue\";\n    } else {\n      return \"JSONFalse\";\n    }\n  } else if (x === null) {\n    return \"JSONNull\";\n  } else if (Array.isArray(x)) {\n    return {\n            TAG: \"JSONArray\",\n            _0: x\n          };\n  } else {\n    return {\n            TAG: \"JSONObject\",\n            _0: x\n          };\n  }\n}\n\nfunction test(x, v) {\n  switch (v) {\n    case \"String\" :\n        return typeof x === \"string\";\n    case \"Number\" :\n        return typeof x === \"number\";\n    case \"Object\" :\n        if (x !== null && typeof x === \"object\") {\n          return !Array.isArray(x);\n        } else {\n          return false;\n        }\n    case \"Array\" :\n        return Array.isArray(x);\n    case \"Boolean\" :\n        return typeof x === \"boolean\";\n    case \"Null\" :\n        return x === null;\n    \n  }\n}\n\nfunction decodeString(json) {\n  if (typeof json === \"string\") {\n    return json;\n  }\n  \n}\n\nfunction decodeNumber(json) {\n  if (typeof json === \"number\") {\n    return json;\n  }\n  \n}\n\nfunction decodeObject(json) {\n  if (typeof json === \"object\" && !Array.isArray(json) && json !== null) {\n    return json;\n  }\n  \n}\n\nfunction decodeArray(json) {\n  if (Array.isArray(json)) {\n    return json;\n  }\n  \n}\n\nfunction decodeBoolean(json) {\n  if (typeof json === \"boolean\") {\n    return json;\n  }\n  \n}\n\nfunction decodeNull(json) {\n  if (json === null) {\n    return null;\n  }\n  \n}\n\nvar patch = (function (json) {\n  var x = [json];\n  var q = [{ kind: 0, i: 0, parent: x }];\n  while (q.length !== 0) {\n    // begin pop the stack\n    var cur = q[q.length - 1];\n    if (cur.kind === 0) {\n      cur.val = cur.parent[cur.i]; // patch the undefined value for array\n      if (++cur.i === cur.parent.length) {\n        q.pop();\n      }\n    } else {\n      q.pop();\n    }\n    // finish\n    var task = cur.val;\n    if (typeof task === \"object\") {\n      if (Array.isArray(task) && task.length !== 0) {\n        q.push({ kind: 0, i: 0, parent: task, val: undefined });\n      } else {\n        for (var k in task) {\n          if (k === \"RE_PRIVATE_NONE\") {\n            if (cur.kind === 0) {\n              cur.parent[cur.i - 1] = undefined;\n            } else {\n              cur.parent[cur.i] = undefined;\n            }\n            continue;\n          }\n          q.push({ kind: 1, i: k, parent: task, val: task[k] });\n        }\n      }\n    }\n  }\n  return x[0];\n});\n\nfunction serializeExn(x) {\n  return (function(obj){\n  var output= JSON.stringify(obj,function(_,value){\n      if(value===undefined){\n          return {RE_PRIVATE_NONE : true}\n      }\n    return value\n  });\n  \n if(output === undefined){\n   // JSON.stringify will raise TypeError when it detects cylic objects\n   throw new TypeError(\"output is undefined\")\n }\n return output \n })(x);\n}\n\nfunction deserializeUnsafe(s) {\n  return patch(JSON.parse(s));\n}\n\nexport {\n  Kind ,\n  classify ,\n  test ,\n  decodeString ,\n  decodeNumber ,\n  decodeObject ,\n  decodeArray ,\n  decodeBoolean ,\n  decodeNull ,\n  deserializeUnsafe ,\n  serializeExn ,\n}\n/* No side effect */\n"],
  "mappings": "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",
  "names": []
}
